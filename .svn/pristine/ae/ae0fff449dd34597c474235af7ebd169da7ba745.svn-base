package nju.edu.auctionExp.service;

import java.util.List;

import nju.edu.auctionExp.dao.ParticipantDAO;
import nju.edu.auctionExp.model.Participant;

public class ParticipantManagerImpl implements ParticipantManager {
	
	private ParticipantDAO participantDAO;

	public String signIn(Participant participant) {
		if(this.participantExist(participant.getStudentId())){
			Participant tmp = (Participant) this.participantDAO.findByExample(participant).get(0);
			
			return tmp.getIdentifier();
		}
		
		String id = this.generateId(participant.getStudentId());
		this.participantDAO.save(new Participant(id, participant.getName(), participant.getStudentId(), participant.getLabNo()));		
		return id;
	}

	/**
	 * generate identifier based on the studentId.
	 */
	public String generateId(String studentId) {
		char[] ch = studentId.toCharArray();
		StringBuilder builder = new StringBuilder();
		for(int i = 0; i < ch.length; ++i){
			builder.append(ch[i] - 'a');
		}
		return builder.toString();
	}

	@SuppressWarnings("unchecked")
	public List<Participant> findAll() {
		return this.participantDAO.findAll();
	}

	public Participant findByIdentifier(String identifier) {
		return this.participantDAO.findById(identifier);
	}

	public boolean participantExist(String studentId) {
		return this.participantDAO.findByProperty("studentId", studentId).size()>0;
	}

	public void deleteByIdentifier(String identifier) {
		Participant participant = this.findByIdentifier(identifier);
		this.participantDAO.delete(participant);
	}


	public void setParticipantDAO(ParticipantDAO participantDAO) {
		this.participantDAO = participantDAO;
	}

	public ParticipantDAO getParticipantDAO() {
		return participantDAO;
	}
}
