package nju.edu.auctionExp.dao;

import java.util.List;

import nju.edu.auctionExp.dao.common.CommonDAOImpl;
import nju.edu.auctionExp.model.AuctionGroup;

import org.hibernate.LockMode;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.ApplicationContext;

/**
 * A data access object (DAO) providing persistence and search support for
 * AuctionGroup entities. Transaction control of the save(), update() and
 * delete() operations can directly support Spring container-managed
 * transactions or they can be augmented to handle user-managed Spring
 * transactions. Each of these methods provides additional information for how
 * to configure it for the desired type of transaction control.
 * 
 * @see nju.edu.auctionExp.model.AuctionGroup
 * @author MyEclipse Persistence Tools
 */

public class AuctionGroupDAO extends CommonDAOImpl<AuctionGroup> {
	private static final Logger log = LoggerFactory
			.getLogger(AuctionGroupDAO.class);

	protected void initDao() {
		// do nothing
	}

	public void save(AuctionGroup transientInstance) {
		log.debug("saving AuctionGroup instance");
		try {
			getHibernateTemplate().saveOrUpdate(transientInstance);
			log.debug("save successful");
		} catch (RuntimeException re) {
			log.error("save failed", re);
			throw re;
		}
	}

	public void delete(AuctionGroup persistentInstance) {
		log.debug("deleting AuctionGroup instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

	public AuctionGroup findById(java.lang.String id) {
		log.debug("getting AuctionGroup instance with id: " + id);
		try {
			AuctionGroup instance = (AuctionGroup) getHibernateTemplate().get(
					"nju.edu.auctionExp.model.AuctionGroup", id);
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	public List findByExample(AuctionGroup instance) {
		log.debug("finding AuctionGroup instance by example");
		try {
			List results = getHibernateTemplate().findByExample(instance);
			log.debug("find by example successful, result size: "
					+ results.size());
			return results;
		} catch (RuntimeException re) {
			log.error("find by example failed", re);
			throw re;
		}
	}

	public List findByProperty(String propertyName, Object value) {
		log.debug("finding AuctionGroup instance with property: "
				+ propertyName + ", value: " + value);
		try {
			String queryString = "from AuctionGroup as model where model."
					+ propertyName + "= ?";
			return getHibernateTemplate().find(queryString, value);
		} catch (RuntimeException re) {
			log.error("find by property name failed", re);
			throw re;
		}
	}

	public List findAll() {
		log.debug("finding all AuctionGroup instances");
		try {
			String queryString = "from AuctionGroup";
			return getHibernateTemplate().find(queryString);
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}

	public AuctionGroup merge(AuctionGroup detachedInstance) {
		log.debug("merging AuctionGroup instance");
		try {
			AuctionGroup result = (AuctionGroup) getHibernateTemplate().merge(
					detachedInstance);
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			log.error("merge failed", re);
			throw re;
		}
	}

	public void attachDirty(AuctionGroup instance) {
		log.debug("attaching dirty AuctionGroup instance");
		try {
			getHibernateTemplate().saveOrUpdate(instance);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public void attachClean(AuctionGroup instance) {
		log.debug("attaching clean AuctionGroup instance");
		try {
			getHibernateTemplate().lock(instance, LockMode.NONE);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public static AuctionGroupDAO getFromApplicationContext(
			ApplicationContext ctx) {
		return (AuctionGroupDAO) ctx.getBean("AuctionGroupDAO");
	}
}